services:
    back:
        build: "./MicroservicesAPI - Back Users"
        container_name: ms_users
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_BACK}:3000"
        volumes:
            - ./MicroservicesAPI - Back Users:/app
            - /app/node_modules
        networks: [ msnet ]

    back_stores:
        build: "./MicroservicesAPI - Back Stores"
        container_name: ms_stores
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_STORES}:3002"
        volumes:
            - ./MicroservicesAPI - Back Stores:/app
            - /app/node_modules
        networks: [ msnet ]

    back_ratings:
        build: "./MicroservicesAPI - Back Ratings"
        container_name: ms_ratings
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_RATINGS}:3003"
        volumes:
            - ./MicroservicesAPI - Back Ratings:/app
            - /app/node_modules
        networks: [ msnet ]

    back_products:
        build: "./MicroservicesAPI - Back Products"
        container_name: ms_products
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_PRODUCTS}:3004"
        volumes:
            - ./MicroservicesAPI - Back Products:/app
            - /app/node_modules
        networks: [ msnet ]

    back_orders:
        build: "./MicroservicesAPI - Back Orders"
        container_name: ms_orders
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_ORDERS}:3005"
        volumes:
            - ./MicroservicesAPI - Back Orders:/app
            - /app/node_modules
        networks: [ msnet ]

    back_categories:
        build: "./MicroservicesAPI - Back Categories"
        container_name: ms_categories
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_CATEGORIES}:3006"
        volumes:
            - ./MicroservicesAPI - Back Categories:/app
            - /app/node_modules
        networks: [ msnet ]

    back_carts:
        build: "./MicroservicesAPI - Back Carts"
        container_name: ms_carts
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_CARTS}:3007"
        volumes:
            - ./MicroservicesAPI - Back Carts:/app
            - /app/node_modules
        networks: [ msnet ]

    oauth:
        build: "./MicroservicesAPI - Back OAuth"
        container_name: ms_oauth
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_OAUTH}:5000"
        networks: [ msnet ]

    reports:
        build: "./MicroservicesAPI - Back Rapports"
        container_name: ms_reports
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_REPORTS}:7000"
        networks: [ msnet ]

    monitoring:
        build: "./MicroservicesAPI - Monitoring"
        container_name: ms_monitoring
        ports:
            - "${PORT_MONITORING}:8080"
        depends_on:
            - back
            - oauth
            - reports
        networks: [ msnet ]

    notification-service:
        build: "./MicroservicesAPI - Back Notifications"
        container_name: ms_notifications
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_NOTIFICATIONS}:8000"
        networks: [ msnet ]

    2fa:
        build: "./MicroservicesAPI - Back 2FA"
        container_name: ms_2fa
        environment:
            - MONGODB_URI=${MONGODB_URI}
        ports:
            - "${PORT_2FA}:3008"
        networks: [ msnet ]
    
    api-gateway:
        build: "./MicroservicesAPI - API Gateway"
        container_name: ms_apigateway
        ports:
            - "${PORT_GATEWAY}:8081"
        depends_on:
            - back
            - back_stores
            - back_ratings
            - back_products
            - back_orders
            - back_categories
            - back_carts
            - oauth
            - reports
            - notification-service
            - 2fa
            - monitoring
        networks: [ msnet ]

    front:
        build:
            context: "./MicroservicesAPI - Front"
            dockerfile: Dockerfile
        container_name: ms_front
        ports:
            - "${PORT_FRONT}:4200"
        volumes:
            - ./MicroservicesAPI - Front:/app
            - /app/node_modules
        networks: [ msnet ]

networks:
    msnet:
        driver: bridge
